////////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor -- see https://github.com/KeyWorksRW/wxUiEditor/
//
// DO NOT EDIT THIS FILE! Your changes will be lost if it is re-generated!
////////////////////////////////////////////////////////////////////////////////

#include "pch.h"

#include <wx/button.h>
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/sizer.h>
#include <wx/statline.h>
#include <wx/stattext.h>
#include <wx/valgen.h>

#include "convertdlgBase.h"

ConvertDlgBase::ConvertDlgBase(wxWindow* parent) : wxDialog()
{
    Create(parent, wxID_ANY, wxString::FromUTF8("Create new .srcfiles.yaml file"), wxDefaultPosition, wxDefaultSize,
        wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);

    auto parent_sizer = new wxBoxSizer(wxVERTICAL);

    auto box_sizer = new wxBoxSizer(wxVERTICAL);
    parent_sizer->Add(box_sizer, wxSizerFlags().Expand().Border(wxALL));

    auto staticText = new wxStaticText(this, wxID_ANY, wxString::FromUTF8("C&reate .srcfiles.yaml in:"));
    box_sizer->Add(staticText, wxSizerFlags().Border(wxLEFT|wxRIGHT|wxTOP, wxSizerFlags::GetDefaultBorder()));

    m_dirPickerOut = new wxDirPickerCtrl(this, wxID_ANY, wxEmptyString,  wxDirSelectorPromptStr);
    box_sizer->Add(m_dirPickerOut, wxSizerFlags().Expand().Border(wxALL));

    auto box_sizer2 = new wxBoxSizer(wxVERTICAL);
    parent_sizer->Add(box_sizer2, wxSizerFlags().Expand().Border(wxALL));

    m_radioBtn = new wxRadioButton(this, wxID_ANY, wxString::FromUTF8("Create using all files in:"), wxDefaultPosition, wxDefaultSize,
    wxRB_GROUP);
    m_radioBtn->SetValidator(wxGenericValidator(&m_useAllFiles));
    box_sizer2->Add(m_radioBtn, wxSizerFlags().Border(wxLEFT|wxRIGHT|wxTOP, wxSizerFlags::GetDefaultBorder()));

    m_dirPickerList = new wxDirPickerCtrl(this, wxID_ANY, wxEmptyString,  wxDirSelectorPromptStr);
    box_sizer2->Add(m_dirPickerList, wxSizerFlags().Expand().Border(wxALL));

    auto box_sizer3 = new wxBoxSizer(wxVERTICAL);
    parent_sizer->Add(box_sizer3, wxSizerFlags().Expand().Border(wxALL));

    m_radioBtn2 = new wxRadioButton(this, wxID_ANY, wxString::FromUTF8("Create using &project file:"));
    m_radioBtn2->SetValidator(wxGenericValidator(&m_useProjectFile));
    box_sizer3->Add(m_radioBtn2, wxSizerFlags().Border(wxLEFT|wxRIGHT|wxTOP, wxSizerFlags::GetDefaultBorder()));

    auto box_sizer4 = new wxBoxSizer(wxHORIZONTAL);
    box_sizer3->Add(box_sizer4, wxSizerFlags().Expand().Border(wxBOTTOM, wxSizerFlags::GetDefaultBorder()));

    m_choiceProjects = new wxChoice(this, wxID_ANY);
    m_choiceProjects->SetValidator(wxGenericValidator(&m_Project));
    box_sizer4->Add(m_choiceProjects, wxSizerFlags(1).Border(wxLEFT|wxRIGHT|wxTOP, wxSizerFlags::GetDefaultBorder()));

    m_filePickerProject = new wxFilePickerCtrl(this, wxID_ANY, wxEmptyString, wxFileSelectorPromptStr, 
    wxString::FromUTF8("Project Files|*.vcxproj;*.vcproj;*.project;*.cbp;*.dsp"), wxDefaultPosition, wxDefaultSize,
    wxFLP_FILE_MUST_EXIST|wxFLP_OPEN);
    box_sizer4->Add(m_filePickerProject, wxSizerFlags().Border(wxALL));

    auto box_sizer5 = new wxBoxSizer(wxVERTICAL);
    parent_sizer->Add(box_sizer5, wxSizerFlags().Expand().Border(wxALL));

    m_checkBox = new wxCheckBox(this, wxID_ANY, wxString::FromUTF8("&Add .vscode/ directory and files (tasks.json, launch.json, etc.)"));
    m_checkBox->SetValidator(wxGenericValidator(&m_AddVscodeDir));
    m_checkBox->SetToolTip(wxString::FromUTF8("If checked, files are added to a .vscode/ directory so that you can build the project from with Visual Studio Code."));
    box_sizer5->Add(m_checkBox, wxSizerFlags().Border(wxALL));

    m_checkGitIgnore = new wxCheckBox(this, wxID_ANY, wxString::FromUTF8("Have &git ignore all generated files and directories"));
    m_checkGitIgnore->SetValidator(wxGenericValidator(&m_gitIgnore));
    m_checkGitIgnore->SetToolTip(wxString::FromUTF8("If checked, all ttBld generated file types and directories will be added to .git/info/exclude so that they will not be tracked."));
    box_sizer5->Add(m_checkGitIgnore, wxSizerFlags().Border(wxALL));

    auto static_line = new wxStaticLine(this);
    parent_sizer->Add(static_line, wxSizerFlags().Expand().Border(wxALL, 8));

    auto stdBtn = CreateStdDialogButtonSizer(wxOK|wxCANCEL);
    parent_sizer->Add(CreateSeparatedSizer(stdBtn), wxSizerFlags().Expand().Border(wxALL));

    SetSizerAndFit(parent_sizer);
    Centre(wxBOTH);

    wxPersistentRegisterAndRestore(this, "ConvertDlgBase");

    // Event handlers
    Bind(wxEVT_INIT_DIALOG, &ConvertDlgBase::OnInit, this);
    m_filePickerProject->Bind(wxEVT_FILEPICKER_CHANGED, &ConvertDlgBase::OnProjectFileLocated, this);
    Bind(wxEVT_BUTTON, &ConvertDlgBase::OnOK, this, wxID_OK);
}
